<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<tx:annotation-driven />
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<!-- 다운로드 저장 경로 -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<!-- ViewResolver에 의해 home.jsp로 응답합니다. -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<!-- <property name="contentType" value="text/html; charset=UTF-8"/> -->
	</beans:bean>

	<context:component-scan base-package="com.board.cha" /><!-- 
		cha 이하의 패키지는 전부 사용 -->
	<!-- 3개를 연결 -->
	<!-- dbcp Bean -->
	<beans:bean class="org.springframework.jndi.JndiObjectFactoryBean"
		id="dataSource">
		<beans:property name="jndiName" value="jdbc/OracleDB" />
		<beans:property name="resourceRef" value="true" />
	</beans:bean>
	<!-- sqlSessionFactory & sqlSession --><!-- myBatis설정 -->
	<beans:bean class="org.mybatis.spring.SqlSessionFactoryBean"
		id="sqlSessionFactory">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property value="/WEB-INF/myBatis/myBatis-conf.xml"
			name="configLocation" />
		<beans:property value="/WEB-INF/myBatis/mapper/*.xml"
			name="mapperLocations" />
	</beans:bean>
	<!-- SqlSessionTemplate --><!-- close()를 자동으로 관리 -->
	<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg index="0" ref="sqlSessionFactory" />
	</beans:bean>
	<tx:annotation-driven /><!-- @Transactional을 사용하기 위해 -->
	<!-- TransactionManager 세부설정 코딩 후 드랜잭션 사용시 id명을 반드시 transactionManager으로 
		해야 한다. -->
	<beans:bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>

	<!-- 파일 첨부(Multipart Resolver 설정): form태그가 enctype="multipart/form-data"인 
		경우 서버의 Bean으로 전달해줌 -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="defaultEncoding" value="UTF-8" />
		<beans:property name="maxUploadSize" value="10000000" /><!-- 
			10MB -->
		<beans:property name="maxInMemorySize" value="10000000" /><!-- 
			10MB -->
	</beans:bean>
</beans:beans>


